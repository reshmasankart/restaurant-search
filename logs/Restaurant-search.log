{"timestamp":"2025-08-02T16:37:38.831002+02:00","logger":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread":"main","level":"INFO","message":"Could not detect default configuration classes for test class [com.sample.restaurant.search.RestaurantSearchApplicationTests]: RestaurantSearchApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:38.960763+02:00","logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread":"main","level":"INFO","message":"Found @SpringBootConfiguration com.sample.restaurant.search.RestaurantSearchApplication for test class com.sample.restaurant.search.RestaurantSearchApplicationTests","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:39.140296+02:00","logger":"org.springframework.boot.devtools.restart.RestartApplicationListener","thread":"main","level":"INFO","message":"Restart disabled due to context in which it is running","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:39.495853+02:00","logger":"org.hibernate.validator.internal.util.Version","thread":"background-preinit","level":"INFO","message":"HV000001: Hibernate Validator 8.0.2.Final","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:39.555202+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplicationTests","thread":"main","level":"INFO","message":"Starting RestaurantSearchApplicationTests using Java 21.0.5 with PID 52267 (started by reshmasankart in /Users/reshmasankart/restaurant-search )","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:39.555742+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplicationTests","thread":"main","level":"DEBUG","message":"Running with Spring Boot v3.5.4, Spring v6.2.9","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:39.556227+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplicationTests","thread":"main","level":"INFO","message":"No active profile set, falling back to 1 default profile: \"default\"","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:39.573931+02:00","logger":"org.springframework.web.context.support.GenericWebApplicationContext","thread":"main","level":"DEBUG","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@17da6e45","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:40.308671+02:00","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"main","level":"INFO","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:40.347886+02:00","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"main","level":"INFO","message":"Finished Spring Data repository scanning in 33 ms. Found 1 MongoDB repository interface.","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:40.749744+02:00","logger":"org.mongodb.driver.client","thread":"main","level":"INFO","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync\", \"version\": \"5.5.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"aarch64\", \"version\": \"14.6\"}, \"platform\": \"Java/Eclipse Adoptium/21.0.5+11-LTS\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2ee6196f, com.mongodb.Jep395RecordCodecProvider@1baab1b1, com.mongodb.KotlinCodecProvider@1c833e78]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:40.794458+02:00","logger":"org.mongodb.driver.cluster","thread":"cluster-ClusterId{value='688e22b4e0127f448dc40f46', description='null'}-localhost:27017","level":"INFO","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=36346042, minRoundTripTimeNanos=0}","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:41.300573+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"main","level":"DEBUG","message":"9 mappings in 'requestMappingHandlerMapping'","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:41.418301+02:00","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread":"main","level":"DEBUG","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:41.445082+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread":"main","level":"DEBUG","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:41.489842+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"main","level":"DEBUG","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:41.643028+02:00","logger":"org.springframework.boot.test.mock.web.SpringBootMockServletContext","thread":"main","level":"INFO","message":"Initializing Spring TestDispatcherServlet ''","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:41.643426+02:00","logger":"org.springframework.test.web.servlet.TestDispatcherServlet","thread":"main","level":"INFO","message":"Initializing Servlet ''","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:41.644685+02:00","logger":"org.springframework.test.web.servlet.TestDispatcherServlet","thread":"main","level":"INFO","message":"Completed initialization in 1 ms","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:41.67052+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplicationTests","thread":"main","level":"INFO","message":"Started RestaurantSearchApplicationTests in 2.542 seconds (process running for 5.315)","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:41.715767+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"main","level":"DEBUG","message":"Mapped to controller.com.sample.restaurant.search.RestaurantController#searchVisibleRestaurants(int, int)","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:41.775477+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"DEBUG","message":"Searching for restaurants near coordinates: x=3, y=2","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:41.787082+02:00","logger":"org.springframework.data.mongodb.core.MongoTemplate","thread":"main","level":"DEBUG","message":"find using query: {} fields: Document{{}} sort: null for class: class model.com.sample.restaurant.search.Restaurant in collection: restaurants","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:41.940687+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:41.942344+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Writing [dto.com.sample.restaurant.search.SearchResponseDto@4448854d]","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:42.035341+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"main","level":"DEBUG","message":"Mapped to controller.com.sample.restaurant.search.RestaurantController#addOrUpdate(String, RestaurantDetailsResponseDto)","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:42.076329+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread":"main","level":"DEBUG","message":"Read \"application/json;charset=UTF-8\" to [dto.com.sample.restaurant.search.RestaurantDetailsResponseDto@479a1d7a]","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:42.089445+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"INFO","message":"Adding or updating restaurant with ID: 51e1545c-8b65-4d83-82f9-7fcad4a23111","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:42.095232+02:00","logger":"org.springframework.data.mongodb.core.MongoTemplate","thread":"main","level":"DEBUG","message":"Saving Document containing fields: [_id, name, type, openingHours, image, radius, coordinates, _class]","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:42.119881+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"INFO","message":"Restaurant with ID: 51e1545c-8b65-4d83-82f9-7fcad4a23111 updated","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:42.124742+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:42.125081+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Writing [dto.com.sample.restaurant.search.RestaurantDetailsResponseDto@72021abd]","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:42.132249+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"main","level":"DEBUG","message":"Mapped to controller.com.sample.restaurant.search.RestaurantController#getById(String)","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:42.134392+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:42.134704+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Writing [dto.com.sample.restaurant.search.RestaurantDetailsResponseDto@72021abd]","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:42.267779+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"DEBUG","message":"Searching for restaurants near coordinates: x=10, y=20","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:42.27111+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"INFO","message":"Adding or updating restaurant with ID: d4bd9fee-60d4-4610-bb02-9a9e808f9313","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:42.271426+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"INFO","message":"Restaurant with ID: d4bd9fee-60d4-4610-bb02-9a9e808f9313 updated","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:42.273357+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"INFO","message":"Fetching restaurant by ID: 0e98dd4b-6737-4354-bdab-1a16313d8839 ","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:42.275537+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"INFO","message":"Fetching restaurant by ID: 3dd305a8-9c38-4df1-a3c5-efdbcc835c19 ","context":"","exception":""}
{"timestamp":"2025-08-02T16:37:42.285254+02:00","logger":"org.springframework.web.context.support.GenericWebApplicationContext","thread":"SpringApplicationShutdownHook","level":"DEBUG","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@17da6e45, started on Sat Aug 02 16:37:39 CEST 2025","context":"","exception":""}
{"timestamp":"2025-08-02T16:41:59.356452+02:00","logger":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread":"main","level":"INFO","message":"Could not detect default configuration classes for test class [com.sample.restaurant.search.RestaurantSearchApplicationTests]: RestaurantSearchApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","context":"","exception":""}
{"timestamp":"2025-08-02T16:41:59.55785+02:00","logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread":"main","level":"INFO","message":"Found @SpringBootConfiguration com.sample.restaurant.search.RestaurantSearchApplication for test class com.sample.restaurant.search.RestaurantSearchApplicationTests","context":"","exception":""}
{"timestamp":"2025-08-02T16:41:59.742752+02:00","logger":"org.springframework.boot.devtools.restart.RestartApplicationListener","thread":"main","level":"INFO","message":"Restart disabled due to context in which it is running","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:00.011237+02:00","logger":"org.hibernate.validator.internal.util.Version","thread":"background-preinit","level":"INFO","message":"HV000001: Hibernate Validator 8.0.2.Final","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:00.076776+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplicationTests","thread":"main","level":"INFO","message":"Starting RestaurantSearchApplicationTests using Java 21.0.5 with PID 52642 (started by reshmasankart in /Users/reshmasankart/restaurant-search )","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:00.077577+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplicationTests","thread":"main","level":"DEBUG","message":"Running with Spring Boot v3.5.4, Spring v6.2.9","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:00.078343+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplicationTests","thread":"main","level":"INFO","message":"No active profile set, falling back to 1 default profile: \"default\"","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:00.09396+02:00","logger":"org.springframework.web.context.support.GenericWebApplicationContext","thread":"main","level":"DEBUG","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@17da6e45","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:00.796679+02:00","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"main","level":"INFO","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:00.835986+02:00","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"main","level":"INFO","message":"Finished Spring Data repository scanning in 33 ms. Found 1 MongoDB repository interface.","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:01.223083+02:00","logger":"org.mongodb.driver.client","thread":"main","level":"INFO","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync\", \"version\": \"5.5.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"aarch64\", \"version\": \"14.6\"}, \"platform\": \"Java/Eclipse Adoptium/21.0.5+11-LTS\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@22b771d1, com.mongodb.Jep395RecordCodecProvider@3fd006e8, com.mongodb.KotlinCodecProvider@1ca73158]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:01.283845+02:00","logger":"org.mongodb.driver.cluster","thread":"cluster-ClusterId{value='688e23b98c3a380eb4d805b7', description='null'}-localhost:27017","level":"INFO","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=51934875, minRoundTripTimeNanos=0}","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:01.735296+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"main","level":"DEBUG","message":"9 mappings in 'requestMappingHandlerMapping'","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:01.844892+02:00","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread":"main","level":"DEBUG","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:01.869618+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread":"main","level":"DEBUG","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:01.913526+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"main","level":"DEBUG","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.063739+02:00","logger":"org.springframework.boot.test.mock.web.SpringBootMockServletContext","thread":"main","level":"INFO","message":"Initializing Spring TestDispatcherServlet ''","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.064119+02:00","logger":"org.springframework.test.web.servlet.TestDispatcherServlet","thread":"main","level":"INFO","message":"Initializing Servlet ''","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.065221+02:00","logger":"org.springframework.test.web.servlet.TestDispatcherServlet","thread":"main","level":"INFO","message":"Completed initialization in 0 ms","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.090138+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplicationTests","thread":"main","level":"INFO","message":"Started RestaurantSearchApplicationTests in 2.361 seconds (process running for 5.61)","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.133871+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"main","level":"DEBUG","message":"Mapped to controller.com.sample.restaurant.search.RestaurantController#searchVisibleRestaurants(int, int)","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.192892+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"DEBUG","message":"Searching for restaurants near coordinates: x=3, y=2","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.205761+02:00","logger":"org.springframework.data.mongodb.core.MongoTemplate","thread":"main","level":"DEBUG","message":"find using query: {} fields: Document{{}} sort: null for class: class model.com.sample.restaurant.search.Restaurant in collection: restaurants","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.400043+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.401837+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Writing [dto.com.sample.restaurant.search.SearchResponseDto@4243ed7]","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.468238+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"main","level":"DEBUG","message":"Mapped to controller.com.sample.restaurant.search.RestaurantController#addOrUpdate(String, RestaurantDetailsResponseDto)","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.502269+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread":"main","level":"DEBUG","message":"Read \"application/json;charset=UTF-8\" to [dto.com.sample.restaurant.search.RestaurantDetailsResponseDto@124a7bec]","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.514727+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"INFO","message":"Adding or updating restaurant with ID: 51e1545c-8b65-4d83-82f9-7fcad4a23111","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.52025+02:00","logger":"org.springframework.data.mongodb.core.MongoTemplate","thread":"main","level":"DEBUG","message":"Saving Document containing fields: [_id, name, type, openingHours, image, radius, coordinates, _class]","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.556452+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"INFO","message":"Restaurant with ID: 51e1545c-8b65-4d83-82f9-7fcad4a23111 updated","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.561728+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.562106+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Writing [dto.com.sample.restaurant.search.RestaurantDetailsResponseDto@2d8a62a9]","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.569064+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"main","level":"DEBUG","message":"Mapped to controller.com.sample.restaurant.search.RestaurantController#getById(String)","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.571139+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.571392+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Writing [dto.com.sample.restaurant.search.RestaurantDetailsResponseDto@2d8a62a9]","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.702355+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"DEBUG","message":"Searching for restaurants near coordinates: x=10, y=20","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.70598+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"INFO","message":"Adding or updating restaurant with ID: e4585537-c419-4a26-a578-5f5b5840ee13","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.706352+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"INFO","message":"Restaurant with ID: e4585537-c419-4a26-a578-5f5b5840ee13 updated","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.708408+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"INFO","message":"Fetching restaurant by ID: 0f777439-4a50-49e8-9f32-fdbd2bdfec53 ","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.710625+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"INFO","message":"Fetching restaurant by ID: dc2f46fb-8a1d-4d82-9e3a-590f06679ac5 ","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:02.719806+02:00","logger":"org.springframework.web.context.support.GenericWebApplicationContext","thread":"SpringApplicationShutdownHook","level":"DEBUG","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@17da6e45, started on Sat Aug 02 16:42:00 CEST 2025","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:58.159223+02:00","logger":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread":"main","level":"INFO","message":"Could not detect default configuration classes for test class [com.sample.restaurant.search.RestaurantSearchApplicationTests]: RestaurantSearchApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:58.246427+02:00","logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread":"main","level":"INFO","message":"Found @SpringBootConfiguration com.sample.restaurant.search.RestaurantSearchApplication for test class com.sample.restaurant.search.RestaurantSearchApplicationTests","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:58.334958+02:00","logger":"org.springframework.boot.devtools.restart.RestartApplicationListener","thread":"main","level":"INFO","message":"Restart disabled due to context in which it is running","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:58.526449+02:00","logger":"org.hibernate.validator.internal.util.Version","thread":"background-preinit","level":"INFO","message":"HV000001: Hibernate Validator 8.0.2.Final","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:58.547871+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplicationTests","thread":"main","level":"INFO","message":"Starting RestaurantSearchApplicationTests using Java 23.0.1 with PID 52742 (started by reshmasankart in /Users/reshmasankart/restaurant-search )","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:58.548767+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplicationTests","thread":"main","level":"DEBUG","message":"Running with Spring Boot v3.5.4, Spring v6.2.9","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:58.549877+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplicationTests","thread":"main","level":"INFO","message":"No active profile set, falling back to 1 default profile: \"default\"","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:58.564903+02:00","logger":"org.springframework.web.context.support.GenericWebApplicationContext","thread":"main","level":"DEBUG","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@49206065","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:59.080592+02:00","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"main","level":"INFO","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:59.107537+02:00","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"main","level":"INFO","message":"Finished Spring Data repository scanning in 23 ms. Found 1 MongoDB repository interface.","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:59.517859+02:00","logger":"org.mongodb.driver.client","thread":"main","level":"INFO","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync\", \"version\": \"5.5.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"aarch64\", \"version\": \"14.6\"}, \"platform\": \"Java/Homebrew/23.0.1\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6a51ae7c, com.mongodb.Jep395RecordCodecProvider@171aa66, com.mongodb.KotlinCodecProvider@58739e5e]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:59.638993+02:00","logger":"org.mongodb.driver.cluster","thread":"cluster-ClusterId{value='688e23f321068f2fc8839c91', description='null'}-localhost:27017","level":"INFO","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=121560875, minRoundTripTimeNanos=0}","context":"","exception":""}
{"timestamp":"2025-08-02T16:42:59.958309+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"main","level":"DEBUG","message":"9 mappings in 'requestMappingHandlerMapping'","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:00.044831+02:00","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread":"main","level":"DEBUG","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:00.073022+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread":"main","level":"DEBUG","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:00.099066+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"main","level":"DEBUG","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:00.216845+02:00","logger":"org.springframework.boot.test.mock.web.SpringBootMockServletContext","thread":"main","level":"INFO","message":"Initializing Spring TestDispatcherServlet ''","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:00.21721+02:00","logger":"org.springframework.test.web.servlet.TestDispatcherServlet","thread":"main","level":"INFO","message":"Initializing Servlet ''","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:00.218338+02:00","logger":"org.springframework.test.web.servlet.TestDispatcherServlet","thread":"main","level":"INFO","message":"Completed initialization in 0 ms","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:00.243716+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplicationTests","thread":"main","level":"INFO","message":"Started RestaurantSearchApplicationTests in 1.913 seconds (process running for 3.09)","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:00.898554+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"main","level":"DEBUG","message":"Mapped to controller.com.sample.restaurant.search.RestaurantController#searchVisibleRestaurants(int, int)","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:00.945444+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"DEBUG","message":"Searching for restaurants near coordinates: x=3, y=2","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:00.956303+02:00","logger":"org.springframework.data.mongodb.core.MongoTemplate","thread":"main","level":"DEBUG","message":"find using query: {} fields: Document{{}} sort: null for class: class model.com.sample.restaurant.search.Restaurant in collection: restaurants","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:01.068183+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:01.069318+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Writing [dto.com.sample.restaurant.search.SearchResponseDto@938e54a]","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:01.140016+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"main","level":"DEBUG","message":"Mapped to controller.com.sample.restaurant.search.RestaurantController#addOrUpdate(String, RestaurantDetailsResponseDto)","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:01.159544+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread":"main","level":"DEBUG","message":"Read \"application/json;charset=UTF-8\" to [dto.com.sample.restaurant.search.RestaurantDetailsResponseDto@798753cc]","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:01.170598+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"INFO","message":"Adding or updating restaurant with ID: 51e1545c-8b65-4d83-82f9-7fcad4a23111","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:01.181895+02:00","logger":"org.springframework.data.mongodb.core.MongoTemplate","thread":"main","level":"DEBUG","message":"Saving Document containing fields: [_id, name, type, openingHours, image, radius, coordinates, _class]","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:01.241182+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"main","level":"INFO","message":"Restaurant with ID: 51e1545c-8b65-4d83-82f9-7fcad4a23111 updated","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:01.245463+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:01.245849+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Writing [dto.com.sample.restaurant.search.RestaurantDetailsResponseDto@7c4de811]","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:01.252864+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"main","level":"DEBUG","message":"Mapped to controller.com.sample.restaurant.search.RestaurantController#getById(String)","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:01.25441+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:01.254594+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"main","level":"DEBUG","message":"Writing [dto.com.sample.restaurant.search.RestaurantDetailsResponseDto@7c4de811]","context":"","exception":""}
{"timestamp":"2025-08-02T16:43:01.259121+02:00","logger":"org.springframework.web.context.support.GenericWebApplicationContext","thread":"SpringApplicationShutdownHook","level":"DEBUG","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@49206065, started on Sat Aug 02 16:42:58 CEST 2025","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:32.140285+02:00","logger":"org.hibernate.validator.internal.util.Version","thread":"background-preinit","level":"INFO","message":"HV000001: Hibernate Validator 8.0.2.Final","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:32.167343+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplication","thread":"restartedMain","level":"INFO","message":"Starting RestaurantSearchApplication using Java 23.0.1 with PID 53041 (/Users/reshmasankart/restaurant-search /target/classes started by reshmasankart in /Users/reshmasankart/restaurant-search )","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:32.168019+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplication","thread":"restartedMain","level":"DEBUG","message":"Running with Spring Boot v3.5.4, Spring v6.2.9","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:32.168528+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplication","thread":"restartedMain","level":"INFO","message":"No active profile set, falling back to 1 default profile: \"default\"","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:32.236011+02:00","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","level":"INFO","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:32.236437+02:00","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","level":"INFO","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:32.844385+02:00","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","level":"INFO","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:32.876409+02:00","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","level":"INFO","message":"Finished Spring Data repository scanning in 28 ms. Found 1 MongoDB repository interface.","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:33.205579+02:00","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","message":"Tomcat initialized with port 8082 (http)","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:33.214495+02:00","logger":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","message":"Initializing ProtocolHandler [\"http-nio-8082\"]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:33.216566+02:00","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","level":"INFO","message":"Starting service [Tomcat]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:33.216783+02:00","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","level":"INFO","message":"Starting Servlet engine: [Apache Tomcat/10.1.43]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:33.249832+02:00","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","level":"INFO","message":"Initializing Spring embedded WebApplicationContext","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:33.250625+02:00","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","level":"INFO","message":"Root WebApplicationContext: initialization completed in 1014 ms","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:33.386291+02:00","logger":"org.mongodb.driver.client","thread":"restartedMain","level":"INFO","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync\", \"version\": \"5.5.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"aarch64\", \"version\": \"14.6\"}, \"platform\": \"Java/Homebrew/23.0.1\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6c3bd974, com.mongodb.Jep395RecordCodecProvider@6348f3e1, com.mongodb.KotlinCodecProvider@2fe2df8c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:33.447118+02:00","logger":"org.mongodb.driver.cluster","thread":"cluster-ClusterId{value='688e257da046d1e013ce9e47', description='null'}-localhost:27017","level":"INFO","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=59938250, minRoundTripTimeNanos=0}","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:33.524996+02:00","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","level":"INFO","message":"LiveReload server is running on port 35729","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:33.730816+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"restartedMain","level":"DEBUG","message":"9 mappings in 'requestMappingHandlerMapping'","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:33.783384+02:00","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread":"restartedMain","level":"DEBUG","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:33.800451+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread":"restartedMain","level":"DEBUG","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:33.830791+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"restartedMain","level":"DEBUG","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:33.948217+02:00","logger":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","message":"Starting ProtocolHandler [\"http-nio-8082\"]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:33.960315+02:00","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","message":"Tomcat started on port 8082 (http) with context path '/'","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:33.970086+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplication","thread":"restartedMain","level":"INFO","message":"Started RestaurantSearchApplication in 2.138 seconds (process running for 2.871)","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.670599+02:00","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8082-exec-1","level":"INFO","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.672245+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-1","level":"INFO","message":"Initializing Servlet 'dispatcherServlet'","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.672692+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-1","level":"DEBUG","message":"Detected StandardServletMultipartResolver","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.672805+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-1","level":"DEBUG","message":"Detected AcceptHeaderLocaleResolver","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.672888+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-1","level":"DEBUG","message":"Detected FixedThemeResolver","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.67577+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-1","level":"DEBUG","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7f5bb08","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.676266+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-1","level":"DEBUG","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@75803bee","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.676605+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-1","level":"DEBUG","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.676789+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-1","level":"INFO","message":"Completed initialization in 4 ms","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.683957+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-1","level":"DEBUG","message":"GET \"/swagger-ui/index.html\", parameters={}","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.690108+02:00","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread":"http-nio-8082-exec-1","level":"DEBUG","message":"Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.703839+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-1","level":"DEBUG","message":"Completed 304 NOT_MODIFIED","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.814619+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"GET \"/swagger-ui/swagger-initializer.js\", parameters={}","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.814795+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-3","level":"DEBUG","message":"GET \"/swagger-ui/index.css\", parameters={}","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.815268+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-4","level":"DEBUG","message":"GET \"/swagger-ui/swagger-ui.css\", parameters={}","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.81548+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-5","level":"DEBUG","message":"GET \"/swagger-ui/swagger-ui-bundle.js\", parameters={}","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.815822+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-6","level":"DEBUG","message":"GET \"/swagger-ui/swagger-ui-standalone-preset.js\", parameters={}","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.816005+02:00","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.816148+02:00","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread":"http-nio-8082-exec-5","level":"DEBUG","message":"Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.816203+02:00","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread":"http-nio-8082-exec-3","level":"DEBUG","message":"Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.816381+02:00","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread":"http-nio-8082-exec-6","level":"DEBUG","message":"Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.816399+02:00","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread":"http-nio-8082-exec-4","level":"DEBUG","message":"Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.81764+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-3","level":"DEBUG","message":"Completed 304 NOT_MODIFIED","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.817674+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-5","level":"DEBUG","message":"Completed 304 NOT_MODIFIED","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.817732+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-4","level":"DEBUG","message":"Completed 304 NOT_MODIFIED","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.817674+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-6","level":"DEBUG","message":"Completed 304 NOT_MODIFIED","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:42.848144+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"Completed 200 OK","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:43.059131+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-7","level":"DEBUG","message":"GET \"/v3/api-docs/swagger-config\", parameters={}","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:43.059657+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-8","level":"DEBUG","message":"GET \"/swagger-ui/favicon-32x32.png\", parameters={}","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:43.061028+02:00","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread":"http-nio-8082-exec-8","level":"DEBUG","message":"Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:43.061628+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"http-nio-8082-exec-7","level":"DEBUG","message":"Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:43.063253+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-8","level":"DEBUG","message":"Completed 304 NOT_MODIFIED","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:43.079356+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread":"http-nio-8082-exec-7","level":"DEBUG","message":"Using 'application/json', given [*/*] and supported [application/json]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:43.100423+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread":"http-nio-8082-exec-7","level":"DEBUG","message":"Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8082/swagger-ui/oauth2-re (truncated)...]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:43.104834+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-7","level":"DEBUG","message":"Completed 200 OK","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:43.355605+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-9","level":"DEBUG","message":"GET \"/v3/api-docs\", parameters={}","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:43.357368+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"http-nio-8082-exec-9","level":"DEBUG","message":"Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:43.747603+02:00","logger":"org.springdoc.api.AbstractOpenApiResource","thread":"http-nio-8082-exec-9","level":"INFO","message":"Init duration for springdoc-openapi is: 369 ms","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:43.772846+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread":"http-nio-8082-exec-9","level":"DEBUG","message":"Using 'application/json', given [application/json, */*] and supported [application/json]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:43.773966+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread":"http-nio-8082-exec-9","level":"DEBUG","message":"Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:43.774997+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-9","level":"DEBUG","message":"Completed 200 OK","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:50.453723+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"GET \"/locations/search?x=1&y=1\", parameters={masked}","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:50.469877+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"Mapped to controller.com.sample.restaurant.search.RestaurantController#searchVisibleRestaurants(int, int)","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:50.562043+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"Searching for restaurants near coordinates: x=1, y=1","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:50.578868+02:00","logger":"org.springframework.data.mongodb.core.MongoTemplate","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"find using query: {} fields: Document{{}} sort: null for class: class model.com.sample.restaurant.search.Restaurant in collection: restaurants","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:50.770377+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:50.770768+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"Writing [dto.com.sample.restaurant.search.SearchResponseDto@1032c617]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:50.78224+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"Completed 200 OK","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:56.157095+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-8","level":"DEBUG","message":"GET \"/locations/30e1545c-8b65-4d83-82f9-7fcad4a23114\", parameters={}","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:56.161562+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"http-nio-8082-exec-8","level":"DEBUG","message":"Mapped to controller.com.sample.restaurant.search.RestaurantController#getById(String)","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:56.16906+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"http-nio-8082-exec-8","level":"INFO","message":"Fetching restaurant by ID: 30e1545c-8b65-4d83-82f9-7fcad4a23114 ","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:56.183209+02:00","logger":"org.springframework.data.mongodb.core.MongoTemplate","thread":"http-nio-8082-exec-8","level":"DEBUG","message":"findOne using query: { \"id\" : \"30e1545c-8b65-4d83-82f9-7fcad4a23114\"} fields: Document{{}} for class: class model.com.sample.restaurant.search.Restaurant in collection: restaurants","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:56.202567+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"http-nio-8082-exec-8","level":"DEBUG","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:56.203047+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"http-nio-8082-exec-8","level":"DEBUG","message":"Writing [dto.com.sample.restaurant.search.RestaurantDetailsResponseDto@46ff652a]","context":"","exception":""}
{"timestamp":"2025-08-02T16:49:56.204207+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-8","level":"DEBUG","message":"Completed 200 OK","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:22.326446+02:00","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread":"SpringApplicationShutdownHook","level":"INFO","message":"Commencing graceful shutdown. Waiting for active requests to complete","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:22.339119+02:00","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread":"tomcat-shutdown","level":"INFO","message":"Graceful shutdown complete","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:42.740499+02:00","logger":"org.hibernate.validator.internal.util.Version","thread":"background-preinit","level":"INFO","message":"HV000001: Hibernate Validator 8.0.2.Final","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:42.760837+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplication","thread":"restartedMain","level":"INFO","message":"Starting RestaurantSearchApplication using Java 21.0.5 with PID 53111 (/Users/reshmasankart/restaurant-search /target/classes started by reshmasankart in /Users/reshmasankart/restaurant-search )","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:42.761269+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplication","thread":"restartedMain","level":"DEBUG","message":"Running with Spring Boot v3.5.4, Spring v6.2.9","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:42.761696+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplication","thread":"restartedMain","level":"INFO","message":"No active profile set, falling back to 1 default profile: \"default\"","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:42.784066+02:00","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","level":"INFO","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:42.784337+02:00","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","level":"INFO","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:43.180316+02:00","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","level":"INFO","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:43.206245+02:00","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","level":"INFO","message":"Finished Spring Data repository scanning in 23 ms. Found 1 MongoDB repository interface.","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:43.448651+02:00","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","message":"Tomcat initialized with port 8082 (http)","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:43.45969+02:00","logger":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","message":"Initializing ProtocolHandler [\"http-nio-8082\"]","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:43.46127+02:00","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","level":"INFO","message":"Starting service [Tomcat]","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:43.461453+02:00","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","level":"INFO","message":"Starting Servlet engine: [Apache Tomcat/10.1.43]","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:43.482329+02:00","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","level":"INFO","message":"Initializing Spring embedded WebApplicationContext","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:43.483155+02:00","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","level":"INFO","message":"Root WebApplicationContext: initialization completed in 698 ms","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:43.597931+02:00","logger":"org.mongodb.driver.client","thread":"restartedMain","level":"INFO","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync\", \"version\": \"5.5.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"aarch64\", \"version\": \"14.6\"}, \"platform\": \"Java/Eclipse Adoptium/21.0.5+11-LTS\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3b0a8b45, com.mongodb.Jep395RecordCodecProvider@5b855281, com.mongodb.KotlinCodecProvider@7184d40]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:43.629449+02:00","logger":"org.mongodb.driver.cluster","thread":"cluster-ClusterId{value='688e25c3f17f4a2b5ddb8a0c', description='null'}-localhost:27017","level":"INFO","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19877208, minRoundTripTimeNanos=0}","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:43.708761+02:00","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","level":"INFO","message":"LiveReload server is running on port 35729","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:43.864324+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"restartedMain","level":"DEBUG","message":"9 mappings in 'requestMappingHandlerMapping'","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:43.912038+02:00","logger":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread":"restartedMain","level":"DEBUG","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:43.926602+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread":"restartedMain","level":"DEBUG","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:43.951592+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"restartedMain","level":"DEBUG","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:44.041169+02:00","logger":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","message":"Starting ProtocolHandler [\"http-nio-8082\"]","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:44.050818+02:00","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","message":"Tomcat started on port 8082 (http) with context path '/'","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:44.057436+02:00","logger":"com.sample.restaurant.search.RestaurantSearchApplication","thread":"restartedMain","level":"INFO","message":"Started RestaurantSearchApplication in 1.495 seconds (process running for 1.952)","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:48.014713+02:00","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8082-exec-2","level":"INFO","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:48.015829+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-2","level":"INFO","message":"Initializing Servlet 'dispatcherServlet'","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:48.016226+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"Detected StandardServletMultipartResolver","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:48.016377+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"Detected AcceptHeaderLocaleResolver","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:48.016463+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"Detected FixedThemeResolver","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:48.018761+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@766350b4","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:48.018997+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@7ff6b188","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:48.019242+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:48.019399+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-2","level":"INFO","message":"Completed initialization in 4 ms","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:48.024209+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"GET \"/locations/30e1545c-8b65-4d83-82f9-7fcad4a23114\", parameters={}","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:48.033233+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"Mapped to controller.com.sample.restaurant.search.RestaurantController#getById(String)","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:48.094724+02:00","logger":"impl.service.com.sample.restaurant.search.RestaurantServiceImpl","thread":"http-nio-8082-exec-2","level":"INFO","message":"Fetching restaurant by ID: 30e1545c-8b65-4d83-82f9-7fcad4a23114 ","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:48.105412+02:00","logger":"org.springframework.data.mongodb.core.MongoTemplate","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"findOne using query: { \"id\" : \"30e1545c-8b65-4d83-82f9-7fcad4a23114\"} fields: Document{{}} for class: class model.com.sample.restaurant.search.Restaurant in collection: restaurants","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:48.173165+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:48.17402+02:00","logger":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"Writing [dto.com.sample.restaurant.search.RestaurantDetailsResponseDto@5d4a8d2f]","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:48.179914+02:00","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8082-exec-2","level":"DEBUG","message":"Completed 200 OK","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:54.239422+02:00","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread":"SpringApplicationShutdownHook","level":"INFO","message":"Commencing graceful shutdown. Waiting for active requests to complete","context":"","exception":""}
{"timestamp":"2025-08-02T16:50:54.248946+02:00","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread":"tomcat-shutdown","level":"INFO","message":"Graceful shutdown complete","context":"","exception":""}
